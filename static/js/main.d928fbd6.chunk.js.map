{"version":3,"sources":["context/header/languageContext.js","components/header/SwitchLanguage.jsx","data/getData.js","data/config.js","App.js","reportWebVitals.js","index.js"],"names":["LanguageContext","createContext","LanguageProvider","children","useState","value","language","setLanguage","Provider","SwitchLanguage","useContext","className","onClick","href","GetData","dataApi","setDataApi","useEffect","fetch","headers","Authorization","process","then","res","json","data","items","map","el","description","id","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iLACaA,EAAkBC,wBAAc,IAEhCC,EAAmB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC/B,EAAgCC,mBAAS,IAAzC,mBAEMC,EAAQ,CACZC,SAHF,KAIEC,YAJF,MAOA,OACI,cAACP,EAAgBQ,SAAjB,CAA0BH,MAAOA,EAAjC,SACKF,KCwCEM,MAjDf,WAEI,IAAQF,EAAgBG,qBAAWV,GAA3BO,YAER,OACE,sBAAKI,UAAU,YAAf,UACE,qBAAKA,UAAU,gBAAgBC,QAAS,kBAAML,EAAY,OAA1D,qBAGA,+BACE,6BACE,mBAAGM,KAAK,IAAID,QAAS,kBAAML,EAAY,OAAOI,UAAU,KAAxD,uBAIF,6BACE,mBAAGE,KAAK,IAAID,QAAS,kBAAML,EAAY,OAAOI,UAAU,KAAxD,sBAIF,6BACE,mBAAGE,KAAK,IAAID,QAAS,kBAAML,EAAY,OAAOI,UAAU,KAAxD,sBAIF,6BACE,mBAAGE,KAAK,IAAID,QAAS,kBAAML,EAAY,OAAOI,UAAU,KAAxD,uBAIF,6BACE,mBAAGE,KAAK,IAAID,QAAS,kBAAML,EAAY,OAAOI,UAAU,KAAxD,uBAIF,6BACE,mBAAGE,KAAK,IAAID,QAAS,kBAAML,EAAY,OAAOI,UAAU,KAAxD,sBAIF,6BACE,mBAAGE,KAAK,IAAID,QAAS,kBAAML,EAAY,OAAOI,UAAU,KAAxD,6BCzCG,SAASG,IACtB,IAAQR,EAAaI,qBAAWV,GAAxBM,SAER,EAA8BF,mBAAS,IAAvC,mBAAOW,EAAP,KAAgBC,EAAhB,KAYA,OAXAC,qBAAU,WACRC,MAAM,GAAD,OCRI,8CDQJ,OAAcZ,GAAY,CAC7Ba,QAAS,CACPC,cCXQC,yCDcTC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLT,EAAWS,EAAKC,YAEnB,CAACpB,IAEF,mCACGS,EAAQY,KAAI,SAACC,GAAD,OACX,4BAAgBA,EAAGC,aAAXD,EAAGE,SETJC,MATf,WACE,OACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAACjB,EAAD,QCISkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.d928fbd6.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react';\nexport const LanguageContext = createContext('')\n\nexport const LanguageProvider = ({ children }) => {\n    const [language, setLanguage] = useState('');\n\n    const value = {\n      language,\n      setLanguage,\n    }\n\n    return (\n        <LanguageContext.Provider value={value}>\n            {children}\n        </LanguageContext.Provider>\n    )\n}","import React, {useContext} from 'react'\nimport styles from './styles/styles.sass'\nimport {LanguageContext} from '../../context/header/languageContext'\n\nfunction SwitchLanguage() {\n\n    const { setLanguage } = useContext(LanguageContext);\n\n    return (\n      <div className='lang_menu'>\n        <div className='selected_lang' onClick={() => setLanguage('ru')}>\n          Russian\n        </div>\n        <ul>\n          <li>\n            <a href='#' onClick={() => setLanguage('en')} className='en'>\n              English\n            </a>\n          </li>\n          <li>\n            <a href='#' onClick={() => setLanguage('fr')} className='fr'>\n              French\n            </a>\n          </li>\n          <li>\n            <a href='#' onClick={() => setLanguage('de')} className='de'>\n              German\n            </a>\n          </li>\n          <li>\n            <a href='#' onClick={() => setLanguage('es')} className='es'>\n              Spanish\n            </a>\n          </li>\n          <li>\n            <a href='#' onClick={() => setLanguage('it')} className='it'>\n              Italian\n            </a>\n          </li>\n          <li>\n            <a href='#' onClick={() => setLanguage('pl')} className='pl'>\n              Polish\n            </a>\n          </li>\n          <li>\n            <a href='#' onClick={() => setLanguage('ar')} className='ar'>\n              Arabic\n            </a>\n          </li>\n        </ul>\n      </div>\n    );\n}\nexport default SwitchLanguage\n","import React, { useEffect, useState, useContext } from 'react';\nimport { API_KEY, API_URL } from './config';\nimport { LanguageContext } from '../context/header/languageContext';\n\nexport default function GetData() {\n  const { language } = useContext(LanguageContext);\n\n  const [dataApi, setDataApi] = useState([]);\n  useEffect(() => {\n    fetch(`${API_URL}${language}`, {\n      headers: {\n        Authorization: API_KEY,\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setDataApi(data.items);\n      });\n  }, [language]);\n  return (\n    <>\n      {dataApi.map((el) => (\n        <p key={el.id}>{el.description}</p>\n      ))}\n    </>\n  );\n}\n","const API_KEY = process.env.REACT_APP_API_KEY;\nconst API_URL = `https://fortniteapi.io/v2/items/list?lang=`\n\nexport {\n    API_KEY,\n    API_URL,\n}","import SwitchLanguage from './components/header/SwitchLanguage';\nimport GetData from './data/getData';\nimport { LanguageProvider } from './context/header/languageContext'\n\nfunction App() {\n  return (\n    <LanguageProvider>\n      <SwitchLanguage />\n      <GetData />\n    </LanguageProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}